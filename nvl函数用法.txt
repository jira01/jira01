nvl函数用法
格式为：NVL( string1, replace_with)
功能：如果string1为NULL，则NVL函数返回replace_with的值，否则返回string1的值。
注意事项：string1和replace_with必须为同一数据类型，除非显示的使用TO_CHAR函数。 例：NVL(TO_CHAR(numeric_column), 'some string') 其中numeric_column代指某个数字类型的值。
例：nvl(yanlei777,0) > 0 NVL(yanlei777, 0) 的意思是 如果 yanlei777 是NULL， 则取 0值 通过查询获得某个字段的合计值，如果这个值为null将给出一个预设的默认值

返回值类型

字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值

说明

在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。

select nvl(a.name,'空得') as name from student a join school b on a.ID=b.ID

注意：两个参数得类型要匹配
	SELECT           T.D_FDATE,
                       T.VC_ZHCODE,
                       NVL(SUM(T.F_FZQSZ), 0) f_price_b,
                       NVL(SUM(T.F_FZQCB), 0) f_cost_b,
                       NVL(SUM(T.F_FGZ_ZZ), 0) f_gz_b,
                       NVL(SUM(T.F_FYZQSZ), 0) f_price_Y,
                       NVL(SUM(T.F_FYZQCB), 0) f_cost_Y,
                       NVL(SUM(T.F_FYGZ_ZZ), 0) f_gz_Y,
                       T.VC_SOURCE,
                       SYSDATE d_updatetime
                  FROM GZ_FUND_GZB T

比如这样的判断就很重要啦，因为你不知道哪一行是 is not null 的，也不知道接下来是否要对这个单元格进行运算操作，因此，不能给列填 null，就给它一个 0 ，便于查看，也便于运算